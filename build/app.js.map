{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap d8107f9c16ae1a785884","webpack:///./~/d3/d3.js","webpack:///./src/index.js","webpack:///./src/lib/main-canvas/index.js","webpack:///./src/lib/wall-data/index.js","webpack:///./src/lib/main-canvas/main-canvas.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/lib/main-canvas/main-canvas.css?97e8"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","_interopRequireDefault","obj","__esModule","_d","_d2","_mainCanvas","_mainCanvas2","_index","_index2","getRandomPosition","baseIndex","attractor","WIDTH","HEIGHT","mainCanvas","generateWall","height","wall","locals","item","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","firstChild","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","unescape","encodeURIComponent","blob","oldSrc","memoize","fn","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","content"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.16\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _mainCanvas = __webpack_require__(3);\n\t\n\tvar _mainCanvas2 = _interopRequireDefault(_mainCanvas);\n\t\n\tvar _index = __webpack_require__(4);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(function (data) {\n\t\n\t\tvar baseIndex = data.length - 1;\n\t\n\t\tfunction getRandomPosition() {\n\t\t\treturn 250 + 100 * Math.random() - 50;\n\t\t}\n\t\n\t\tdata.push({\n\t\t\tx: getRandomPosition(),\n\t\t\ty: getRandomPosition(),\n\t\t\tr: 20 + Math.random() * 50\n\t\t}, {\n\t\t\tx: getRandomPosition(),\n\t\t\ty: getRandomPosition(),\n\t\t\tr: 20 + Math.random() * 50\n\t\t}, {\n\t\t\tx: getRandomPosition(),\n\t\t\ty: getRandomPosition(),\n\t\t\tr: 20 + Math.random() * 50\n\t\t});\n\t\n\t\tdata.push({\n\t\t\tx: 120,\n\t\t\ty: 120,\n\t\t\tr: 1,\n\t\t\tattractor: true,\n\t\t\tfixed: true\n\t\t}, {\n\t\t\tx: 380,\n\t\t\ty: 120,\n\t\t\tr: 1,\n\t\t\tattractor: true,\n\t\t\tfixed: true\n\t\t}, {\n\t\t\tx: 380,\n\t\t\ty: 380,\n\t\t\tr: 1,\n\t\t\tattractor: true,\n\t\t\tfixed: true\n\t\t}, {\n\t\t\tx: 120,\n\t\t\ty: 380,\n\t\t\tr: 1,\n\t\t\tattractor: true,\n\t\t\tfixed: true\n\t\t});\n\t\n\t\tvar links = [{\n\t\t\tsource: baseIndex + 1,\n\t\t\ttarget: baseIndex + 2\n\t\t}, {\n\t\t\tsource: baseIndex + 2,\n\t\t\ttarget: baseIndex + 3\n\t\t\t//},\n\t\t\t//{\n\t\t\t//\tsource: baseIndex + 3,\n\t\t\t//\ttarget: baseIndex + 1\n\t\t}];\n\t\n\t\tvar nodes = _mainCanvas2.default.append('svg:g').selectAll('circle').data(data).enter().append('circle');\n\t\n\t\tvar force = _d2.default.layout.force().nodes(data).links(links).linkDistance(250).linkStrength(0.8).size([500, 500]).friction(0.9).charge(function (d) {\n\t\t\treturn d.attractor ? 100 : d.fixed ? -10 : -4 * d.r;\n\t\t}).gravity(0.05).theta(100).alpha(0.1).start();\n\t\n\t\tforce.on('tick', function () {\n\t\t\tnodes.attr('cx', function (d) {\n\t\t\t\treturn d.x;\n\t\t\t}).attr('cy', function (d) {\n\t\t\t\treturn d.y;\n\t\t\t}).attr('r', function (d) {\n\t\t\t\treturn d.r;\n\t\t\t});\n\t\t});\n\t})((0, _index2.default)(40, 50, 50, 400, 400).map(function (cell, index) {\n\t\treturn {\n\t\t\tindex: index,\n\t\t\tx: cell.x,\n\t\t\ty: cell.y,\n\t\t\tr: 2,\n\t\t\tfixed: true\n\t\t};\n\t}));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _mainCanvas = __webpack_require__(8);\n\t\n\tvar _mainCanvas2 = _interopRequireDefault(_mainCanvas);\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar WIDTH = 960;\n\tvar HEIGHT = 500;\n\t\n\tvar mainCanvas = _d2.default.select('#app').append('svg:svg').attr('width', WIDTH).attr('height', HEIGHT).attr('class', _mainCanvas2.default.root);\n\t\n\texports.default = mainCanvas;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction generateWall(cells, x, y, width, height) {\n\t\tvar wall = [];\n\t\tvar i = void 0;\n\t\n\t\t// top\n\t\tfor (i = 0; i < cells; i++) {\n\t\t\twall.push({\n\t\t\t\tx: x + i * width / cells,\n\t\t\t\ty: y\n\t\t\t});\n\t\t}\n\t\t// right\n\t\tfor (i = 0; i < cells; i++) {\n\t\t\twall.push({\n\t\t\t\tx: x + width,\n\t\t\t\ty: y + i * height / cells\n\t\t\t});\n\t\t}\n\t\t// bottom\n\t\tfor (i = 0; i < cells; i++) {\n\t\t\twall.push({\n\t\t\t\tx: x + width - i * width / cells,\n\t\t\t\ty: y + height\n\t\t\t});\n\t\t}\n\t\t// left\n\t\tfor (i = 0; i < cells; i++) {\n\t\t\twall.push({\n\t\t\t\tx: x,\n\t\t\t\ty: y + height - i * height / cells\n\t\t\t});\n\t\t}\n\t\n\t\treturn wall;\n\t}\n\t\n\texports.default = generateWall;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(6)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".main-canvas__root___BywSA{background:#f5f5f5}\", \"\"]);\n\t\n\t// exports\n\texports.locals = {\n\t\t\"root\": \"main-canvas__root___BywSA\"\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(5);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(7)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]___[hash:base64:5]!./main-canvas.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]___[hash:base64:5]!./main-canvas.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d8107f9c16ae1a785884\n **/","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","import d3 from 'd3';\r\nimport mainCanvas from './lib/main-canvas';\r\nimport generateWall from './lib/wall-data/index.js';\r\n\r\n(function (data) {\r\n\r\n\tconst baseIndex = data.length - 1;\r\n\r\n\tfunction getRandomPosition() {\r\n\t\treturn 250 + 100 * Math.random() - 50;\r\n\t}\r\n\r\n\tdata.push({\r\n\t\tx: getRandomPosition(),\r\n\t\ty: getRandomPosition(),\r\n\t\tr: 20 + Math.random() * 50\r\n\t}, {\r\n\t\tx: getRandomPosition(),\r\n\t\ty: getRandomPosition(),\r\n\t\tr: 20 + Math.random() * 50\r\n\t}, {\r\n\t\tx: getRandomPosition(),\r\n\t\ty: getRandomPosition(),\r\n\t\tr: 20 + Math.random() * 50\r\n\t});\r\n\r\n\tdata.push({\r\n\t\tx: 120,\r\n\t\ty: 120,\r\n\t\tr: 1,\r\n\t\tattractor: true,\r\n\t\tfixed: true\r\n\t}, {\r\n\t\tx: 380,\r\n\t\ty: 120,\r\n\t\tr: 1,\r\n\t\tattractor: true,\r\n\t\tfixed: true\r\n\t}, {\r\n\t\tx: 380,\r\n\t\ty: 380,\r\n\t\tr: 1,\r\n\t\tattractor: true,\r\n\t\tfixed: true\r\n\t}, {\r\n\t\tx: 120,\r\n\t\ty: 380,\r\n\t\tr: 1,\r\n\t\tattractor: true,\r\n\t\tfixed: true\r\n\t});\r\n\r\n\tconst links = [\r\n\t\t{\r\n\t\t\tsource: baseIndex + 1,\r\n\t\t\ttarget: baseIndex + 2\r\n\t\t},\r\n\t\t{\r\n\t\t\tsource: baseIndex + 2,\r\n\t\t\ttarget: baseIndex + 3\r\n\t\t//},\r\n\t\t//{\r\n\t\t//\tsource: baseIndex + 3,\r\n\t\t//\ttarget: baseIndex + 1\r\n\t\t}\r\n\t];\r\n\r\n\tconst nodes = mainCanvas.append('svg:g')\r\n\t\t.selectAll('circle')\r\n\t\t.data(data)\r\n\t\t.enter()\r\n\t\t.append('circle');\r\n\r\n\tvar force = d3.layout.force()\r\n\t\t.nodes(data)\r\n\t\t.links(links)\r\n\t\t.linkDistance(250)\r\n\t\t.linkStrength(0.8)\r\n\t\t.size([500, 500])\r\n\t\t.friction(0.9)\r\n\t\t.charge(d => d.attractor ? 100 : (d.fixed ? -10 : -4 * d.r))\r\n\t\t.gravity(0.05)\r\n\t\t.theta(100)\r\n\t\t.alpha(0.1)\r\n\t\t.start();\r\n\r\n\tforce.on('tick', () => {\r\n\t\tnodes\r\n\t\t\t.attr('cx', d => d.x)\r\n\t\t\t.attr('cy', d => d.y)\r\n\t\t\t.attr('r', d => d.r);\r\n\t});\r\n\r\n}(\r\n\tgenerateWall(40, 50, 50, 400, 400)\r\n\t\t.map((cell, index) => {\r\n\t\t\treturn {\r\n\t\t\t\tindex: index,\r\n\t\t\t\tx: cell.x,\r\n\t\t\t\ty: cell.y,\r\n\t\t\t\tr: 2,\r\n\t\t\t\tfixed: true\r\n\t\t\t};\r\n\t\t})\r\n));\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import styles from './main-canvas.css';\r\n\r\nimport d3 from 'd3';\r\n\r\nconst WIDTH = 960;\r\nconst HEIGHT = 500;\r\n\r\nconst mainCanvas = d3.select('#app')\r\n\t.append('svg:svg')\r\n\t.attr('width', WIDTH)\r\n\t.attr('height', HEIGHT)\r\n\t.attr('class', styles.root);\r\n\r\nexport default mainCanvas;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/main-canvas/index.js\n **/","function generateWall(cells, x, y, width, height) {\r\n\tconst wall = [];\r\n\tlet i;\r\n\r\n\t// top\r\n\tfor (i = 0; i < cells; i++) {\r\n\t\twall.push({\r\n\t\t\tx: x + i * width / cells,\r\n\t\t\ty: y\r\n\t\t});\r\n\t}\r\n\t// right\r\n\tfor (i = 0; i < cells; i++) {\r\n\t\twall.push({\r\n\t\t\tx: x + width,\r\n\t\t\ty: y + i * height / cells\r\n\t\t});\r\n\t}\r\n\t// bottom\r\n\tfor (i = 0; i < cells; i++) {\r\n\t\twall.push({\r\n\t\t\tx: x + width - i * width / cells,\r\n\t\t\ty: y + height\r\n\t\t});\r\n\t}\r\n\t// left\r\n\tfor (i = 0; i < cells; i++) {\r\n\t\twall.push({\r\n\t\t\tx: x,\r\n\t\t\ty: y + height - i * height / cells\r\n\t\t});\r\n\t}\r\n\r\n\treturn wall;\r\n}\r\n\r\nexport default generateWall;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/wall-data/index.js\n **/","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".main-canvas__root___BywSA{background:#f5f5f5}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"root\": \"main-canvas__root___BywSA\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?modules&localIdentName=[name]__[local]___[hash:base64:5]!./src/lib/main-canvas/main-canvas.css\n ** module id = 5\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 6\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 7\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]___[hash:base64:5]!./main-canvas.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]___[hash:base64:5]!./main-canvas.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../../node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]___[hash:base64:5]!./main-canvas.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main-canvas/main-canvas.css\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}